#!/usr/bin/env node

const fs = require("fs");
const ejs = require("ejs");
const path = require("path");
const prettier = require("prettier");
const pluralize = require("pluralize");
const { promisify } = require("util");

const writeFile = promisify(fs.writeFile);

const writeCode = (file, code) => {
  return writeFile(file, prettier.format(code, { parser: "typescript" }));
};

const toGeneratedName = name => {
  return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
};

const withDefaults = items => {
  return items.map(item => ({
    plural: pluralize(item.name),
    type: item.name,
    generatedType: toGeneratedName(item.name),
    ...item
  }));
};

const data = {
  objects: withDefaults(require("../gen/input.json"))
};

const generateKubernetes = async () => {
  const template = path.join(__dirname, "../gen/Kubernetes.ejs");
  const code = await ejs.renderFile(template, data);
  await writeCode("src/Kubernetes.ts", code);
};

const generateObjects = async () => {
  const template = path.join(__dirname, "../gen/objects.ejs");
  const code = await ejs.renderFile(template, data);
  await writeCode("src/types/objects.ts", code);
};

generateKubernetes()
  .then(() => generateObjects())
  .catch(error => console.error(error));
