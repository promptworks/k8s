import * as gen from "./generated";

export type ObjectMeta = gen.IoK8sApimachineryPkgApisMetaV1ObjectMeta;
export type Container = gen.IoK8sApiCoreV1Container;
export type EnvVar = gen.IoK8sApiCoreV1EnvVar;
export type EnvFromSource = gen.IoK8sApiCoreV1EnvFromSource;
export type Probe = gen.IoK8sApiCoreV1Probe;
export type ContainerPort = gen.IoK8sApiCoreV1ContainerPort
export type VolumeMount = gen.IoK8sApiCoreV1VolumeMount;

export interface GenericObject {
  apiVersion: string;
  kind: string;
  metadata: ObjectMeta & { name: string };
}

<% for (const o of objects) { %>
export interface <%= o.name %> extends gen.<%= o.type %> {
  kind: "<%= o.type %>";
  apiVersion: string;
  metadata: ObjectMeta & { name: string }
}
<% } %>

export type AnyObject =
<%= objects.map(o => `  | ${o.name}`).join('\n') %>
  | GenericObject;
